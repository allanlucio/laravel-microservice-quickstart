steps:
- id: "Rodando docker-compose"
  name: "gcr.io/$PROJECT_ID/docker-compose"
  args: ["-f","docker-compose.prod.yaml","up","-d"]

- id: "Rodando composer"
  name: "gcr.io/cloud-builders/docker"
  args: ["exec","-t","micro-videos-app","composer","install"]

- id: "Copiando .env"
  name: "gcr.io/cloud-builders/docker"
  args: ["exec","-t","micro-videos-app","cp",".env.example",".env"]

- id: "Copiando .env.testing"
  name: "gcr.io/cloud-builders/docker"
  args: ["exec","-t","micro-videos-app","cp",".env.testing.example",".env.testing"]

- id: "Rodando key:generate"
  name: "gcr.io/cloud-builders/docker"
  args: ["exec","-t","micro-videos-app","php","/var/www/artisan","key:generate"]

- id: "Rodando migrations"
  name: "gcr.io/cloud-builders/docker"
  args: ["exec","-t","micro-videos-app","php","/var/www/artisan","migrate"]

- id: "Rodando PHP UNIT"
  name: "gcr.io/cloud-builders/docker"
  args: ["exec","-t","micro-videos-app","php","/var/www/vendor/bin/phpunit","-c","/var/www/phpunit.xml"]


# gcloud kms encrypt \
# --ciphertext-file=./storage/credentials/google/service-account-storage.json.enc \
# --plaintext-file=./storage/credentials/google/service-account-storage.json \
# --location=global \
# --keyring=testing-lesson \
# --key=service-account
