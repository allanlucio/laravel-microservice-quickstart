steps:
- id: "Decrypt storage keys"
  name: "gcr.io/cloud-builders/gcloud"
  args:
    - kms
    - decrypt
    - --ciphertext-file=./backend/storage/credentials/google/service-account-storage.json.enc
    - --plaintext-file=./backend/storage/credentials/google/service-account-storage.json
    - --location=global
    - --keyring=testing-lesson
    - --key=service-account

- id: "Rodando docker-compose"
  name: "gcr.io/$PROJECT_ID/docker-compose"
  args: ["-f","docker-compose.prod.yaml","up","-d"]
  env:
    - GOOGLE_CLOUD_PROJECT_ID=$PROJECT_ID
    - GOOGLE_CLOUD_KEY_FILE=service-account-storage.json
    - GOOGLE_CLOUD_STORAGE_BUCKET=code-micro-videos-alc
    - GOOGLE_CLOUD_STORAGE_API_URI=https://storage.cloud.google.com/code-micro-videos-alc
    - TESTING_PROD = true


- id: "Rodando composer"
  name: "gcr.io/cloud-builders/docker"
  args: ["exec","-t","micro-videos-app","composer","install","-d","backend"]

- id: "Copiando .env"
  name: "gcr.io/cloud-builders/docker"
  args: ["exec","-t","micro-videos-app","cp","backend/.env.example","backend/.env"]

- id: "Copiando .env.testing"
  name: "gcr.io/cloud-builders/docker"
  args: ["exec","-t","micro-videos-app","cp","backend/.env.testing.example","backend/.env.testing"]

- id: "Rodando key:generate"
  name: "gcr.io/cloud-builders/docker"
  args: ["exec","-t","micro-videos-app","php","/var/www/backend/artisan","key:generate"]

- id: "Rodando migrations"
  name: "gcr.io/cloud-builders/docker"
  args: ["exec","-t","micro-videos-app","php","/var/www/backend/artisan","migrate"]

- id: "Rodando PHP UNIT"
  name: "gcr.io/cloud-builders/docker"
  args: ["exec","-t","micro-videos-app","php","/var/www/backend/vendor/bin/phpunit","-c","/var/www/backend/phpunit.xml"]


# gcloud kms encrypt \
# --ciphertext-file=./storage/credentials/google/service-account-storage.json.enc \
# --plaintext-file=./storage/credentials/google/service-account-storage.json \
# --location=global \
# --keyring=testing-lesson \
# --key=service-account
